% scrRunBeamDamagesimulation
% script to run the beam damage simulation 

            saveConfiguration  = false;
            loadConfiguration  = false;
            
            % Define the ROI for density estimation
            rectX      = obj.params.roiParams.rectX;
            rectY      = obj.params.roiParams.rectY;
            rectWidth  = obj.params.roiParams.rectWidth;
            rectHeight = obj.params.roiParams.rectHeight;
            
            if loadConfiguration
                r = obj.LoadConfiguration(loadConfiguration);
                r.params.simulator.showSimulation = true;
                r.InitializeGraphics
            else
                % Initialize simulator framework parameters
                simulatorParams = SimulationFrameworkParams('showSimulation',true,...
                    'numSteps',numRelaxationSteps,...
                    'dimension', 3,...
                    'dt',0.01,...
                    'objectInteraction',false);
                
                % create an open domain
                openSpaceForces = ForceManagerParams('lennardJonesForce',false,...
                    'LJPotentialWidth',0.1,...
                    'LJPotentialDepth',0.1,...
                    'diffusionForce',true,...
                    'diffusionConst',1,...
                    'mechanicalForce',false,...
                    'mechanicalForceDirection','out',...
                    'mechanicalForceCenter',[0 0 0],...
                    'mechanicalForceMagnitude',0,...
                    'dt',simulatorParams.simulator.dt);
                
                dp(1)         = DomainHandlerParams('domainShape','open',...
                    'reflectionType','off',...
                    'forceParams',openSpaceForces,...
                    'domainWidth',100,...
                    'dimension',simulatorParams.simulator.dimension);
                
                % % create a chain
                chainForces = ForceManagerParams('dt',simulatorParams.simulator.dt,...
                    'springForce',true,...
                    'bendingElasticityForce',false,...
                    'bendingConst',1,...
                    'springConst',simulatorParams.simulator.dimension*openSpaceForces.diffusionConst/sqrt(3)^2,...
                    'minParticleEqDistance',0);
                
                cp          = ChainParams('numBeads',300,...
                    'initializeInDomain',1,...
                    'forceParams',chainForces,...
                    'b',sqrt(3));
                
                % create a cylindrical Beam as a domain
                cylinderForces = ForceManagerParams('diffusionForce',false,...
                    'lennardJonesForce',false,...
                    'morseForce',false);
                
                dp(2)          = DomainHandlerParams('domainShape','cylinder',...
                                                     'reflectionType','off',...
                                                     'domainWidth',2,...
                                                     'domainHeight',70,...
                                                     'forceParams',cylinderForces);
                
                
                %     % create a sphere for visualization
                %     gSphereForce = ForceManagerParams('lennardJonesForce',false,...
                %                                       'diffusionForce',false,...
                %                                       'morseForce',false,...
                %                                       'mechanicalForce',false);
                %
                %     dp(3)        = DomainHandlerParams('domainWidth',sqrt(cp.numBeads/6)*cp.b,...% radius of Gyration
                %                                        'domainCenter',[0 0 0],...
                %                                        'reflectionType','off',...
                %                                        'forceParams',gSphereForce);
                
                % register the object parameters in the simulator framework
                simulatorParams.SetDomainParams(dp);
                simulatorParams.SetChainParams(cp);
                
                % initialize simulator framework
                r = RouseSimulatorFramework(simulatorParams);
                
                % Run until relaxation time
                r.Run
                
                % save configuration by name as chainPos
                SaveConfiguration(r,saveConfiguration);
            end
            
            
            % get the chain position to initialize the histone on it
            [~,initialChainPosition] = r.objectManager.GetMembersPosition(1);
            initialChainPosition     = initialChainPosition{1};
            
            % Initialize histones with the chain position
            histoneForce = ForceManagerParams('dt',r.params.simulator.dt,...
                                                'diffusionForce',false,...
                                                'diffusionConst',0,...
                                                'mechanicalForce',false,...
                                                'mechanicalForceDirection','out',...
                                                'mechanicalForceMagnitude',0,...
                                                'mechanicalForceCenter',[0 0 0],...
                                                'lennardJonesForce',false,...
                                                'LJPotentialWidth',0,...
                                                'LJPotentialDepth',0);
            
            histoneParams = HistoneParams('numHistones',200,'forceParams',histoneForce);
            h             = Histone(histoneParams);
            
            h.Initialize(initialChainPosition);